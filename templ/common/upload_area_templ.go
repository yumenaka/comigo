// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.960
package common

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func UploadArea() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"relative w-full max-w-2xl p-8 bg-white rounded shadow-md\"><!-- 文件选择与拖拽区域 --><div id=\"drop-area\" class=\"px-6 py-24 text-center transition duration-300 border-4 border-gray-300 border-dashed rounded cursor-pointer hover:border-blue-500\"><p class=\"text-gray-500\">将文件拖拽到此处或点击选择文件</p><input type=\"file\" id=\"file-input\" multiple class=\"hidden\"></div><!-- 预览选中文件列表 --><div id=\"preview\" class=\"mt-6\"><h3 class=\"mb-4 text-lg font-semibold\">选择的文件</h3><ul class=\"divide-y divide-gray-200\" id=\"file-list\"><!-- 动态插入文件项 --></ul></div><!-- 进度条背景 显示与隐藏有过渡效果，不可点击。--><div id=\"progress-bar\" class=\"absolute pointer-events-none top-0 left-0 h-full transition-opacity duration-500 bg-blue-500/30\" style=\"width: 0%;\"></div><!-- 上传按钮 --><button id=\"upload-button\" class=\"w-full py-2 mt-6 text-white bg-blue-500 rounded hover:bg-blue-600 disabled:og-blue-600/50\" disabled>上传文件<p id=\"progress-text\" class=\"mt-2 text-gray-700\"></p></button><!-- 上传结果显示区域 --><div id=\"result\" class=\"mt-4\"></div></div><div class=\"flex-grow bg-gray-400 place-holder\"></div><script>\n\t        // 获取元素\n            const dropArea = document.getElementById('drop-area');\n            const fileInput = document.getElementById('file-input');\n            const fileList = document.getElementById('file-list');\n            const uploadButton = document.getElementById('upload-button');\n            const resultDiv = document.getElementById('result');\n            const progressBar = document.getElementById('progress-bar');\n            // 保存选中的文件\n            let filesToUpload = [];\n            // 触发文件选择对话框\n            dropArea.addEventListener('click', () => {\n                fileInput.click();\n            });\n            // 处理文件选择\n            fileInput.addEventListener('change', (e) => {\n                handleFiles(e.target.files);\n                fileInput.value = ''; // 重置文件输入\n            });\n            // 处理拖拽事件\n            ;['dragenter', 'dragover'].forEach(eventName => {\n                dropArea.addEventListener(eventName, (e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    dropArea.classList.add('drag-over');\n                }, false);\n            });\n            // 取消拖拽样式\n            ;['dragleave', 'drop'].forEach(eventName => {\n                dropArea.addEventListener(eventName, (e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    dropArea.classList.remove('drag-over');\n                }, false);\n            });\n            // 处理文件拖拽\n            dropArea.addEventListener('drop', (e) => {\n                const dt = e.dataTransfer;\n                const files = dt.files;\n                handleFiles(files);\n            });\n            // 处理选中的文件\n            function handleFiles(files) {\n                for (let file of files) {\n                    // 避免重复添加\n                    if (!filesToUpload.some(f => f.name === file.name && f.size === file.size && f.lastModified === file.lastModified)) {\n                        filesToUpload.push(file);\n                        addFileToList(file);\n                    }\n                }\n                // 更新上传按钮状态\n                updateUploadButtonState();\n            }\n\n            // 将文件添加到预览列表\n            function addFileToList(file) {\n                // 创建文件项\n                const li = document.createElement('li');\n                li.className = 'py-2 flex items-center justify-between';\n                // 文件信息\n                const infoDiv = document.createElement('div');\n                infoDiv.className = 'flex items-center';\n                // 如果是图片，显示缩略图\n                if (file.type.startsWith('image/')) {\n                    const img = document.createElement('img');\n                    img.className = 'w-12 h-12 object-cover mr-4 rounded';\n                    img.src = URL.createObjectURL(file);\n                    img.onload = () => URL.revokeObjectURL(img.src); // 释放内存\n                    infoDiv.appendChild(img);\n                }\n                // 选择文件详情\n                const detailsDiv = document.createElement('div');\n                // 文件名\n                const fileName = document.createElement('p');\n                fileName.className = 'font-medium';\n                fileName.textContent = file.name;\n                detailsDiv.appendChild(fileName);\n                // 计算文件大小\n                const fileSize = document.createElement('p');\n                fileSize.className = 'text-sm text-gray-500';\n                fileSize.textContent = `${(file.size / 1024).toFixed(2)} KB`;\n                if (file.size > 1024 * 1024) {\n                    fileSize.textContent = `${(file.size / 1024 / 1024).toFixed(2)} MB`;\n                }\n                if (file.size > 1024 * 1024 * 1024) {\n                    fileSize.textContent = `${(file.size / 1024 / 1024 / 1024).toFixed(2)} GB`;\n                }\n                detailsDiv.appendChild(fileSize);\n                // 文件类型\n                infoDiv.appendChild(detailsDiv);\n                li.appendChild(infoDiv);\n                // 删除文件按钮\n                const removeBtn = document.createElement('button');\n                removeBtn.className = 'text-red-500 hover:text-red-700';\n                removeBtn.innerHTML = '&#10005;'; // × 符号\n                removeBtn.addEventListener('click', () => {\n                    filesToUpload = filesToUpload.filter(f => f !== file);\n                    li.remove();\n                    updateUploadButtonState();\n                });\n                li.appendChild(removeBtn);\n                fileList.appendChild(li);\n            }\n            // 更新上传按钮的状态\n            function updateUploadButtonState() {\n                uploadButton.disabled = filesToUpload.length === 0;\n            }\n            // 处理文件上传\n            uploadButton.addEventListener('click', () => {\n                // 没有文件不上传\n                if (filesToUpload.length === 0) return;\n                // 初始化进度条\n                progressBar.style.width = '0%';\n                progressBar.style.opacity = '0.3';\n                uploadButton.textContent = '上传文件'+'0%';\n                // 创建 FormData\n                const formData = new FormData();\n                filesToUpload.forEach(file => {\n                    formData.append('files', file);\n                });\n                // 创建 XMLHttpRequest\n                // 使用 XMLHttpRequest 来替代 fetch，因为 XMLHttpRequest 提供了上传进度事件，便于实现实时的上传进度显示。\n                const xhr = new XMLHttpRequest();\n                xhr.open('POST', '/api/upload', true);\n                // 监听上传进度\n                xhr.upload.addEventListener('progress', (e) => {\n                    if (e.lengthComputable) {\n                        const percentComplete = (e.loaded / e.total) * 100;\n                        progressBar.style.width = `${percentComplete}%`;\n                        uploadButton.textContent = '上传文件'+`${percentComplete.toFixed(2)}%`;\n                    }\n                });\n                // 监听请求完成\n                xhr.onload = function() {\n                    if (xhr.status === 200) {\n                        const data = JSON.parse(xhr.responseText);\n                        let filesList = '';\n                        data.files.forEach(file => {\n                            filesList += '<li>' + file + '</li>';\n                        });\n                        resultDiv.innerHTML = '<p class=\"text-green-500 text-lg text-center\">' + \n                            data.message + '</p><ul class=\"text-gray-700 list-disc list-inside\">' + \n                            filesList + '</ul>';\n                        \n                        // 提示上传成功\n                        showMessage({\n                            message: '成功上传' + filesToUpload.length + '个文件',\n                            buttons: 'confirm',\n                            onConfirm: function() {\n                                window.location.reload();\n                            }\n                        });\n                        // 清空文件列表\n                        filesToUpload = [];\n                        fileList.innerHTML = '';\n\n                    } else {\n                        const errorData = JSON.parse(xhr.responseText);\n                        resultDiv.innerHTML = `<p class=\"text-red-500 text-lg text-center\">${errorData.error || '上传失败'}</p>`;\n                    }\n                // 重置上传按钮和进度条\n                uploadButton.disabled = filesToUpload.length === 0;\n                uploadButton.textContent = '上传文件';\n                // 隐藏进度条\n                progressBar.style.opacity = '0';\n                };\n                // 监听错误\n                xhr.onerror = function() {\n                    resultDiv.innerHTML = `<p class=\"text-red-500\">上传失败: 网络错误</p>`;\n                    uploadButton.disabled = filesToUpload.length === 0;\n                    uploadButton.textContent = '上传文件';\n                    progressBar.style.width = '0%';\n                };\n                // 发送请求\n                uploadButton.disabled = true;\n                uploadButton.textContent = '上传中...';\n                xhr.send(formData);\n            });\n        </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
