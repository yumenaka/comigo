// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.887
package common

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Toast() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!-- Toast Container --><div id=\"toast-container\" class=\"fixed z-50 space-y-2 top-5\"></div><!-- Toast JavaScript --><script>\n    // 生成随机 ID（用于唯一标识每个 Toast）\n    function generateId() {\n        return '_' + Math.random().toString(36).substring(2, 9);\n    }\n    \n    // 跟踪当前显示的 toast 消息\n    const activeToasts = [];\n    \n    // 创建并显示 Toast\n    function showToast(message, type = 'info') {\n        // 检查是否已经存在相同的 toast\n        const isDuplicate = activeToasts.some(toast => toast.message === message && toast.type === type);\n        // 如果是重复的 toast，则只在控制台输出\n        console.log(`Toast (${type}): ${message}`);\n        if (isDuplicate) {\n            return;\n        }\n        \n        // 获取 Toast 容器和按钮\n        const toastContainer = document.getElementById('toast-container');\n        const showToastBtn = document.getElementById('show-toast');\n        const id = generateId();\n        // 设置不同类型的样式\n        let bgColor;\n        switch (type) {\n            case 'success':\n                bgColor = 'bg-green-500';\n                break;\n            case 'error':\n                bgColor = 'bg-red-500';\n                break;\n            case 'warning':\n                bgColor = 'bg-yellow-500';\n                break;\n            default:\n                bgColor = 'bg-blue-500';\n        }\n\n        // 创建 Toast 元素\n        const toast = document.createElement('div');\n        toast.id = id;\n        toast.className = `flex items-center ${bgColor} text-white px-4 py-3 rounded shadow-lg transition transform duration-300 ease-in-out`;\n\n        // Toast 内容\n        toast.innerHTML = `<span class=\"flex-1\">${message}</span> <button class=\"ml-4 ${bgColor} text-white focus:outline-none\">&times;</button>`;\n\n        // 添加到 Toast 容器\n        toastContainer.appendChild(toast);\n        \n        // 将新 toast 添加到活动列表中\n        activeToasts.push({ id, message, type });\n\n        // 自动消失的定时器\n        const timeout = setTimeout(() => {\n            removeToast(id);\n        }, 3000);\n\n        // 点击关闭按钮时移除 Toast\n        toast.querySelector('button').addEventListener('click', () => {\n            clearTimeout(timeout);\n            removeToast(id);\n        });\n    }\n\n    // 移除 Toast\n    function removeToast(id) {\n        const toast = document.getElementById(id);\n        if (toast) {\n            // 从活动列表中移除\n            const index = activeToasts.findIndex(toast => toast.id === id);\n            if (index !== -1) {\n                activeToasts.splice(index, 1);\n            }\n            \n            // 添加淡出动画\n            toast.classList.add('opacity-0', 'translate-x-4');\n            // 动画完成后从 DOM 中移除\n            toast.addEventListener('transitionend', () => {\n                toast.remove();\n            });\n        }\n    }\n</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
