// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.865
package common

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "github.com/yumenaka/comigo/templ/common/svg"

func Drawer(serverHost string, slot templ.Component) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!-- Drawer component --><!-- https://flowbite.com/docs/components/drawer/ --><div id=\"drawer-right\" x-data=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(ServerHostBindStr(serverHost))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `templ/common/drawer.templ`, Line: 10, Col: 40}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "\" class=\"fixed top-0 right-0 z-40 flex flex-col w-64 min-h-full px-2 py-0 overflow-y-auto transition-transform translate-x-full border-l-2 border-gray-500 dark:border-gray-200 rounded h-dvh bg-base-100 text-base-content\" tabindex=\"-1\" aria-labelledby=\"drawer-right-label\"><div class=\"w-full p-0 m-0 border-slate-500\"><h5 id=\"drawer-right-label\" class=\"inline-flex items-center mt-2 mb-0 text-base font-semibold\"><img class=\"w-6 h-6 mx-2 border border-dotted rounded-full shadow-xl border-stone-500 outline-offset-4\" draggable=\"false\" src=\"/images/favicon.png\" alt=\"favicon\"><div x-text=\"i18next.t(&#39;reader_settings&#39;)\">阅读设置</div><button type=\"button\" id=\"logout_button\" class=\"ml-2 mb-0 px-1 py-1 text-xs text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\" @click=\"if(window.confirm(i18next.t(&#39;confirm_logout&#39;))) { document.cookie = &#39;jwt_token=; Max-Age=-99999999; path=/;&#39;; window.location.reload(); }\" x-data=\"{ \n                        isLoggedIn: false,\n                        checkLoginStatus() {\n                            const jwtCookie = document.cookie.split(&#39;;&#39;).find(c =&gt; c.trim().startsWith(&#39;jwt_token=&#39;));\n                            this.isLoggedIn = !!jwtCookie &amp;&amp; jwtCookie.trim() !== &#39;jwt_token=&#39;;\n                        }\n                    }\" x-init=\"checkLoginStatus()\" x-show=\"isLoggedIn\">logout</button></h5><button type=\"button\" data-drawer-hide=\"drawer-right\" aria-controls=\"drawer-right\" class=\"absolute inline-flex items-center justify-center w-10 h-10 text-sm font-bold bg-transparent rounded top-1 end-2 hover:ring dark:hover:text-white\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = svg.Close().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</button></div><div class=\"flex flex-col items-center justify-end flex-grow px-1 pt-1 my-0 rounded drawer_slot text-accent-content dark:text-white\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if slot != nil {
			templ_7745c5c3_Err = slot.Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<!-- 预留位置 --><div class=\"flex-1 w-full place-holder\"></div><!-- 二维码 --><div class=\"w-32 h-32 p-0 mt-2 mb-2\" x-data=\"{ qrcodeSrc: &#39;&#39; }\" x-init=\"qrcodeSrc = window.location.origin +&#39;/api/qrcode.png?qrcode_str=&#39;+ encodeURIComponent(window.location.toString().replace(window.location.hostname,serverHost))\"><img id=\"QrcodeImage\" draggable=\"false\" data-modal-target=\"qrcode-modal\" data-modal-toggle=\"qrcode-modal\" class=\"w-32 h-32 rounded border border-gray-500 dark:border-gray-200\" :src=\"qrcodeSrc\"></div><!-- 清除localStorage保存的本地设置--><button type=\"button\" id=\"reset_local_settings_button\" x-data=\"{ buttonText: i18next.t(&#39;reset_local_settings&#39;) }\" x-text=\"buttonText\" x-on:click=\"if(window.confirm(i18next.t(&#39;confirm_reset_settings&#39;))) { localStorage.clear(); location.reload(); }\" class=\"mb-2 px-3 py-2 text-sm font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\">重置本地设置</button><!-- 切换【debug mode】--><!-- <label class=\"inline-flex items-center w-full my-2.5 cursor-pointer outline-offset-4 outline-double outline-2 hover:outline-3 rounded-sm\">\n\t\t\t\t<input type=\"checkbox\" :value=\"$store.global.debugMode\" x-on:click=\"$store.global.debugMode =!$store.global.debugMode\" class=\"sr-only peer\"/>\n\t\t\t\t<div class=\"relative w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\n\t\t\t\t<span class=\"font-medium ms-3\" x-text=\"i18next.t('debug_mode')\"></span>\n\t\t\t</label> --><!-- 选择主题的select --><select x-model=\"theme\" x-on:change=\"theme = $event.target.value;console.log(theme);\" class=\"w-full h-10 py-0 mt-auto mb-2 font-semibold border rounded bg-base-100 text-accent-content focus:outline-none\"><option value=\"retro\">Retro</option> <option value=\"light\">Light</option> <option value=\"dark\">Dark</option> <option value=\"dracula\">Dracula</option> <option value=\"cupcake\">Cupcake</option> <option value=\"cyberpunk\">Cyberpunk</option> <option value=\"valentine\">Valentine</option> <option value=\"cmyk\">CMYK</option> <option value=\"lofi\">Lofi</option> <option value=\"halloween\">Halloween</option> <option value=\"coffee\">Coffee</option> <option value=\"winter\">Winter</option> <option value=\"nord\">Nord</option></select><!-- 选择背景花纹的select --><select x-transition x-model=\"$store.global.bgPattern\" x-on:change=\"$store.global.bgPattern = $event.target.value;console.log($store.global.bgPattern);\" class=\"w-full h-10 py-0 mt-auto mb-2 font-semibold border rounded bg-base-100 text-accent-content focus:outline-nonee\"><option value=\"none\" x-text=\"i18next.t(&#39;no_pattern&#39;)\">无花纹</option> <option value=\"grid-line\" x-text=\"i18next.t(&#39;grid_line&#39;)\">网格线</option> <option value=\"grid-point\" x-text=\"i18next.t(&#39;grid_point&#39;)\">网格点</option> <option value=\"grid-mosaic\" x-text=\"i18next.t(&#39;mosaic&#39;)\">马赛克</option></select><!-- 选择语言的select 此处需要与自动探测到的结果一致，所以才是 \"en-US\" \"zh-CN\" \"ja\"这种不统一的形式\"--><select x-model=\"i18next.language\" x-on:change=\"i18next.changeLanguage($event.target.value).then(location.reload())\" class=\"w-full h-10 py-0 mt-auto mb-2 font-semibold border rounded bg-base-100 text-accent-content focus:outline-none\"><option value=\"en-US\">English</option> <option value=\"zh-CN\">中文</option> <option value=\"ja\">日本語</option></select></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
