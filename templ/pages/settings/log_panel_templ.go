// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.960
package settings

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

// 服务器日志面板，使用 SSE 实时显示后端日志，并允许发送全局广播消息
func LogPanel() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div id=\"log_panel\" class=\"w-full h-[400px] p-4 mx-2 mt-1.5 bg-gray-900 text-sm text-white rounded-md overflow-auto whitespace-pre-line break-all\"><!-- 日志内容将通过 JavaScript 动态插入 --></div><div class=\"row flex items-center justify-center w-5/6 p-2 my-2\"><input id=\"msg\" placeholder=\"输入全局广播消息\" class=\"ml-4 px-2 py-1 h-10 rounded-md\"> <button id=\"send\" class=\"ml-2 p-1 h-10 w-24 mx-2 my-0 text-center text-gray-700 transition border border-gray-500 rounded bg-sky-300 active:bg-sky-500 hover:text-gray-900\">POST</button></div><script>\n\t\t// 日志内容着色函数\n\t\t// text-green-600 : oklch(62.7% 0.194 149.214)\n\t\t// text-red-600 oklch(57.7% 0.245 27.325)\n\t\t// text-orange-600  oklch(64.6% 0.222 41.116)\n\t\tfunction colorize(log) {\n\t\t\treturn log\n\t\t\t\t.replace(\n\t\t\t\t\t/\\[GET:200\\]/g,\n\t\t\t\t\t'<span style=\"color:oklch(62.7% 0.194 149.214)\">[GET:200]</span>',\n\t\t\t\t)\n\t\t\t\t.replace(\n\t\t\t\t\t/\\[ERROR\\]/g,\n\t\t\t\t\t'<span style=\"color:oklch(57.7% 0.245 27.325)\">[ERROR]</span>',\n\t\t\t\t)\n\t\t\t\t.replace(\n\t\t\t\t\t/\\[WARN\\]/g,\n\t\t\t\t\t'<span style=\"color:oklch(64.6% 0.222 41.116)\">[WARN]</span>',\n\t\t\t\t)\n\t\t\t\t.replace(\n\t\t\t\t\t/\\[INFO\\]/g,\n\t\t\t\t\t'<span style=\"color:oklch(62.7% 0.194 149.214)\">[INFO]</span>',\n\t\t\t\t)\n\t\t\t\t.replace(/\\[DEBUG\\]/g, '<span style=\"color:gray\">[DEBUG]</span>');\n\t\t}\n\t\t// 日志输出函数，追加日志并自动滚动到底部\n\t\tconst log = (s) => {\n\t\t\ts = colorize(s);\n\t\t\tconst box = document.getElementById(\"log_panel\");\n\t\t\tbox.innerHTML += s + \"\\n\";\n\t\t\tbox.scrollTop = box.scrollHeight;\n\t\t};\n\t\t// 创建 EventSource 连接到后端 SSE API,withCredentials:true 允许携带cookie\n\t\t// https://developer.mozilla.org/zh-CN/docs/Web/API/EventSource\n\t\tconst es = new EventSource(\"/api/sse\", { withCredentials: true });\n\t\tes.onopen = (e) =>\n\t\t\tlog(\n\t\t\t\t`<span style=\"color:oklch(62.7% 0.194 149.214)\">[open]</span> log server connected`,\n\t\t\t);\n\t\tes.onerror = (e) =>\n\t\t\tlog(\n\t\t\t\t`<span style=\"color:oklch(57.7% 0.245 27.325)\">[error]</span> ` +\n\t\t\t\t\t(es.readyState === EventSource.CLOSED ? \"closed\" : \"retrying...\"),\n\t\t\t);\n\t\t// 全局消息事件\n\t\tes.onmessage = (e) => {\n\t\t\tshowToast(e.data, \"info\");\n\t\t\tlog(\n\t\t\t\t`<span style=\"color:oklch(62.7% 0.194 149.214)\">[message]</span>` +\n\t\t\t\t\te.data,\n\t\t\t);\n\t\t};\n\t\t// 监听自定义事件名：tick\n\t\tes.addEventListener(\"tick\", (e) => log(\"[tick] \" + e.data));\n\t\t// 监听后端日志事件：log（Echo 日志中间件通过 SSE 使用 event: log 推送）\n\t\tes.addEventListener(\"log\", (e) => log(e.data));\n\n\t\t// 发送消息按钮的点击事件\n\t\tdocument.getElementById(\"send\").onclick = async () => {\n\t\t\tconst message = document.getElementById(\"msg\").value || \"Hello ~\";\n\t\t\tawait fetch(\"/api/push\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\tbody: JSON.stringify({ message }),\n\t\t\t});\n\t\t\tconsole.log(\"[send] \" + message);\n\t\t};\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
