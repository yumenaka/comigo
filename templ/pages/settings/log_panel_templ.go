// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package settings

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

// TailscaleConfig Tailscale 配置项
func LogPanel() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div id=\"log_panel\" class=\"w-full h-[500px] p-4 m-8 bg-gray-900 text-sm text-white rounded-md overflow-auto whitespace-pre-line break-all\"><!-- 日志内容将通过 JavaScript 动态插入 --></div><div class=\"row\"><input id=\"msg\" placeholder=\"要广播的消息\" class=\"ml-4 p-1\"> <button id=\"send\" class=\"ml-2 p-1 h-10 mx-2 my-0 text-center text-gray-700 transition border border-gray-500 rounded bg-sky-300 hover:text-gray-900\">POST</button></div><script>\n\t// 日志内容着色函数\n\t// text-green-600 : oklch(62.7% 0.194 149.214)\n    // text-red-600 oklch(57.7% 0.245 27.325)\n    // text-orange-600  oklch(64.6% 0.222 41.116)\n\tfunction colorize(log) {\n      return log\n        .replace(/\\[GET:200\\]/g, '<span style=\"color:oklch(62.7% 0.194 149.214)\">[GET:200]</span>')\n        .replace(/\\[ERROR\\]/g, '<span style=\"color:oklch(57.7% 0.245 27.325)\">[ERROR]</span>')\n        .replace(/\\[WARN\\]/g, '<span style=\"color:oklch(64.6% 0.222 41.116)\">[WARN]</span>')\n        .replace(/\\[INFO\\]/g, '<span style=\"color:oklch(62.7% 0.194 149.214)\">[INFO]</span>')\n        .replace(/\\[DEBUG\\]/g, '<span style=\"color:gray\">[DEBUG]</span>');\n    }\n    // 日志输出函数，追加日志并自动滚动到底部\n    const log = (s) => {\n      s = colorize(s);\n      const box = document.getElementById('log_panel');\n      box.innerHTML += s + \"\\n\";\n      box.scrollTop = box.scrollHeight;\n    };\n    // 创建 EventSource 连接到后端 SSE API,withCredentials:true 允许携带cookie\n    // https://developer.mozilla.org/zh-CN/docs/Web/API/EventSource\n    const es = new EventSource('/api/sse', { withCredentials: true });\n    es.onopen    = (e) => log(`<span style=\"color:oklch(62.7% 0.194 149.214)\">[open]</span> connected`);\n    es.onerror   = (e) => log(`<span style=\"color:oklch(57.7% 0.245 27.325)\">[error]</span> ` + (es.readyState === EventSource.CLOSED ? 'closed' : 'retrying...'));\n    es.onmessage = (e) => log(`<span style=\"color:oklch(62.7% 0.194 149.214)\">[message]</span>` + e.data);\n    // 监听自定义事件名：tick\n    es.addEventListener('tick', (e) => log('[tick] ' + e.data));\n    // 监听后端日志事件：log（Echo 日志中间件通过 SSE 使用 event: log 推送）\n    es.addEventListener('log',  (e) => log(e.data));\n\n    // 发送消息按钮的点击事件\n    document.getElementById('send').onclick = async () => {\n      const message = document.getElementById('msg').value || 'Hello ~';\n      await fetch('/api/push', {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({ message })\n      });\n      console.log('[send] ' + message);\n    };\n  </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
