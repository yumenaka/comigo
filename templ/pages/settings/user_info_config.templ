package settings

// 关键 htmx 配置解说
// hx-post 请求地址
// hx-trigger 值发生变化后触发
// hx-target用返回的 HTML 替换哪个 DOM 元素
// hx-swap 替换方式
// hx-params="*" 发送表单数据，包含所有 name/value
// saveSuccessHint: 保存成功,三秒后刷新本页面
templ UserInfoConfig(initUsername string, initPassword string, saveSuccessHint bool) {
	if saveSuccessHint {
		<div
		    class="hidden"
			x-init="showToast(i18next.t('saveSuccessHint'), 'info');setTimeout(() => {
            window.location.reload();
        }, 3000)"
		></div>
	}
	<form
		id="user_config_form"
		class="flex flex-col justify-start w-full p-2 m-1 font-semibold
            border rounded-md shadow-md hover:shadow-2xl
            items-left bg-base-100 text-base-content border-slate-400"
		x-data="{
			username: '',
			password: '',
			reEnterPassword: '',
			showPassword: false,
			showReEnterPassword: false,
			isFormChanged: false,
			passwordError: false,
			originalUsername: '',
			originalPassword: '',
			
			init() {
				this.username = this.$el.querySelector('#Username').value;
				this.password = this.$el.querySelector('#Password').value;
				this.originalUsername = this.$el.querySelector('#Username').value;
                this.originalPassword = this.$el.querySelector('#Password').value;

				console.log('Initial values in init():');
				console.log('Username:', this.username, '| Original Username:', this.originalUsername);
				console.log('Password:', this.password, '| Original Password:', this.originalPassword);
				console.log('isFormChanged on init:', this.isFormChanged);

				this.$watch('username', value => {
					this.isFormChanged = value !== this.originalUsername || this.password !== this.originalPassword;
					console.log('Username changed. isFormChanged:', this.isFormChanged, 'New username:', value, 'Original:', this.originalUsername);
				});
				
				this.$watch('password', value => {
					this.isFormChanged = this.username !== this.originalUsername || value !== this.originalPassword;
					this.validatePasswords();
					console.log('Password changed. isFormChanged:', this.isFormChanged, 'New password:', value, 'Original:', this.originalPassword, 'Current username:', this.username);
				});
				
				this.$watch('reEnterPassword', () => {
					this.validatePasswords();
				});
			},
			
			validatePasswords() {
				this.passwordError = this.password !== '' && this.reEnterPassword !== '' && this.password !== this.reEnterPassword;
				console.log('Validated passwords. Error:', this.passwordError);
			},
			
			resetForm() {
				console.log('Resetting form. Original username:', this.originalUsername, 'Original password:', this.originalPassword);
				this.username = this.originalUsername;
				this.password = this.originalPassword;
				this.reEnterPassword = '';
				this.isFormChanged = false;
				this.passwordError = false;
				console.log('Form reset. Username:', this.username, 'Password:', this.password, 'isFormChanged:', this.isFormChanged);
			},
			
			checkBeforeSave() {
				if (this.passwordError) {
					alert('两次输入的密码不一致，请重新输入');
					return false;
				}
				if (!this.isFormChanged) {
					return false;
				}
				console.log('Check before save: OK to save. isFormChanged:', this.isFormChanged, 'passwordError:', this.passwordError);
				return true;
			}
		}"
	>
		<!-- 用户名 -->
		<label x-text={ getTranslations("Username") } for="Username" class="w-64"></label>
		<input
			id="Username"
			name="Username"
			type="text"
			placeholder="Username"
			value={ initUsername }
			x-model="username"
			class="px-2.5 w-full rounded-md border-gray-400 py-2.5 pe-10 shadow-sm sm:text-sm"
		/>
		<!-- 密码 -->
		<div class="relative">
			<label x-text={ getTranslations("Password") } for="Password" class="w-64"></label>
			<div class="relative">
				<input
					id="Password"
					name="Password"
					:type="showPassword ? 'text' : 'password'"
					placeholder="Password"
					value={ initPassword }
					x-model="password"
					class="px-2.5 w-full rounded-md border-gray-400 py-2.5 pe-10 shadow-sm sm:text-sm"
				/>
				<button
					type="button"
					class="absolute right-2 top-1/2 transform -translate-y-1/2"
					@click="showPassword = !showPassword"
				>
					<svg x-show="!showPassword" class="h-5 w-5 text-gray-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
					</svg>
					<svg x-show="showPassword" class="h-5 w-5 text-gray-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21"></path>
					</svg>
				</button>
			</div>
		</div>
		<!-- 再次输入密码 -->
		<div class="relative">
			<label x-text={ getTranslations("ReEnterPassword") } for="ReEnterPassword" class="w-64"></label>
			<div class="relative">
				<input
					id="ReEnterPassword"
					name="ReEnterPassword"
					:type="showReEnterPassword ? 'text' : 'password'"
					placeholder="ReEnter Password"
					x-model="reEnterPassword"
					class="px-2.5 w-full rounded-md border-gray-400 py-2.5 pe-10 shadow-sm sm:text-sm"
					:class="{ 'border-red-500': passwordError }"
				/>
				<button
					type="button"
					class="absolute right-2 top-1/2 transform -translate-y-1/2"
					@click="showReEnterPassword = !showReEnterPassword"
				>
					<svg x-show="!showReEnterPassword" class="h-5 w-5 text-gray-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
					</svg>
					<svg x-show="showReEnterPassword" class="h-5 w-5 text-gray-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21"></path>
					</svg>
				</button>
			</div>
			<!-- 密码不匹配错误提示 -->
			<div x-show="passwordError" class="text-red-500 text-xs mt-1">两次输入的密码不一致</div>
		</div>
		<!-- 按钮组 -->
		<div class="flex mt-4 space-x-2">
			<button
				class="w-20 h-10 mx-2 my-0 text-center text-gray-700 transition border border-gray-500 rounded bg-sky-300 hover:text-gray-900"
				:class="{ 'opacity-50 cursor-not-allowed': !isFormChanged || passwordError }"
				:disabled="!isFormChanged || passwordError"
				hx-post="/api/update-user-info"
				hx-trigger="click"
				hx-target="#user_config_form"
				hx-swap="outerHTML"
				hx-params="*"
				@click="if(!checkBeforeSave()) $event.preventDefault()"
			>SAVE</button>
			<button
				x-show="isFormChanged"
				class="w-20 h-10 mx-2 my-0 text-center text-gray-700 transition border border-gray-500 rounded bg-gray-300 hover:text-gray-900"
				@click="resetForm()"
				:class="{ 'opacity-50 cursor-not-allowed': !isFormChanged }"
				:disabled="!isFormChanged"
			>CANCEL</button>
		</div>
	</form>
}
