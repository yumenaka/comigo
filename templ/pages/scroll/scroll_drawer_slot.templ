package scroll

import (
    "fmt"
    "net/url"

	"github.com/yumenaka/comigo/model"
	"github.com/yumenaka/comigo/templ/state"
)

// 卷轴模式页面，放在侧栏里的【非共通设置】
templ DrawerSlot(s *state.GlobalState, book *model.Book) {
    if (book != nil && book.Type == model.TypePDF) {
	   <!-- PDF【在浏览器中打开】 -->
	   <a
		    type="button"
		    target="_blank"
		    x-text="i18next.t('open_pdf_in_browser')"
		    href={ templ.SafeURL(fmt.Sprintf("/api/raw/%s/%s", book.BookID, url.QueryEscape(book.Title)))}
		    class="px-3 py-2 text-sm font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
	        >
		    用浏览器打开PDF
	    </a>
    }
	<!-- 切换【卷轴模式/翻页模式】的按钮-->
	<!-- <button
		type="button"
		x-data="{ buttonText: i18next.t('to_flip_mode') }"
		x-text="buttonText"
		x-on:click="$store.global.toggleReadMode();toggleFlipScrollFlexible();"
		class="px-3 py-2 text-sm font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
	>
		切换到卷轴模式/翻页模式
	</button> -->
	<!-- 切换【卷轴模式/翻页模式】的toggle-->
	<label class="inline-flex items-center w-full my-2.5 cursor-pointer outline-offset-4 outline-double outline-2 hover:outline-3 rounded-sm">
		<input type="checkbox" x-bind:value="$store.global.readModeIsScroll" x-on:change="$store.global.toggleReadMode();toggleFlipScrollFlexible();" checked class="sr-only peer"/>
		<div
			class="relative w-11 min-w-[44px] h-6 bg-green-600 rounded-full peer peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 dark:bg-gray-700 peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-0.5 after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600"
		></div>
		<span class="font-medium ms-3" x-text="$store.global.readModeIsScroll?i18next.t('scroll_mode')+i18next.t('click_to_toggle'):i18next.t('flip_mode')+i18next.t('click_to_toggle')"></span>
	</label>
	<script>
    	function toggleFlipScrollFlexible() {
    	        // 切换阅读模式时，如果在阅读，就修改URL路径
                const currentUrl = new URL(window.location.href);
                const pathname = currentUrl.pathname;
                // 定义匹配 /flip/<id> 或 /scroll/<id> 的正则表达式，允许它们出现在路径的任意位置
                const pattern = /\/(flip|scroll)\/([^/]+)/;
                const match = pathname.match(pattern);
                if (match) {
                    const currentSegment = match[1]; // 'flip' 或 'scroll'
                    if (currentSegment === 'flip' && !Alpine.store('global').readModeIsScroll) {
                        return; // 如果当前路径是翻页模式，就不需要修改
                    }
                    if (currentSegment === 'scroll' && Alpine.store('global').readModeIsScroll) {
                        return; // 如果当前路径是卷轴模式，也不需要修改
                    }
                    const id = match[2]; // <id> 部分
                    const newSegment = currentSegment === 'flip' ? 'scroll' : 'flip';
                    const newPath = pathname.replace(`/` + currentSegment + `/` + id, `/${newSegment}/${id}`);
                    currentUrl.pathname = newPath;
                    window.location.href = currentUrl.toString();
                }
        }
    </script>
	<!-- 卷轴模式:【固定分页/无限下拉】 -->
	<label class="inline-flex items-center w-full my-2.5 cursor-pointer outline-offset-4 outline-double outline-2 hover:outline-3 rounded-sm">
		<input type="checkbox" x-bind:value="$store.scroll.fixedPagination" @click="togglePaginationLoading();" class="sr-only peer" checked/>
		<div
			class="relative w-11 min-w-[44px] h-6 bg-green-600 rounded-full peer peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 dark:bg-gray-700 peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-0.5 after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600"
		></div>
		<span class="font-medium ms-3" x-text="$store.scroll.fixedPagination?i18next.t('scroll_fixed_pagination')+i18next.t('click_to_toggle'):i18next.t('scroll_infinite_scroll')+i18next.t('click_to_toggle')"></span>
	</label>
    <script>
    // 切换分页模式时，如果当前路径带有分页，就修改URL路径为不带分页的路径
    // 反之，如果当前路径不带分页，就修改URL路径为带分页的路径（page =1）
    // 当前路径类似于 /flip/<id>?page=1 或 /scroll/<id>?page=1
    function togglePaginationLoading() {
         // 获取当前URL对象
         const currentUrl = new URL(window.location.href);
         const hasPageParam = currentUrl.searchParams.has('page');
         Alpine.store('scroll').fixedPagination = !Alpine.store('scroll').fixedPagination;
         // 不需要跳转的时候（比如直接从url进来，导致url与当前状态不一致）
         if (Alpine.store('scroll').fixedPagination === false && !hasPageParam) {
             return;
         }
         if (Alpine.store('scroll').fixedPagination === true && hasPageParam) {
             return;
         }
         // 如果当前路径带有分页，就修改URL路径为不带分页的路径
         // 如果当前路径不带分页，就修改URL路径为带分页的路径（page=1）
         if (hasPageParam) {
             currentUrl.searchParams.delete('page');
         } else {
             currentUrl.searchParams.set('page', '1');
         }
         // 刷新页面
         window.location.href = currentUrl.toString();
         //// 更新URL，不刷新页面
         ////window.history.pushState({}, '', currentUrl.toString());
    }
	</script>
	<!-- 【显示页数】 -->
	<label class="inline-flex items-center w-full my-2.5 cursor-pointer outline-offset-4 outline-double outline-2 hover:outline-3 rounded-sm">
		<input type="checkbox" x-model="$store.scroll.showPageNum" class="sr-only peer" checked/>
		<div
			class="relative w-11 min-w-[44px] h-6 bg-gray-200 rounded-full peer peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 dark:bg-gray-700 peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-0.5 after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600"
		></div>
		<span class="font-medium ms-3" x-text="i18next.t('showPageNum')"></span>
	</label>
	<!-- 【页面间距】 -->
	<!-- range 组件参考：https://flowbite.com/docs/forms/range/-->
	<div class="relative w-full my-2 rounded-sm outline-offset-4 outline-double outline-2 hover:outline-3">
		<label
			for="marginBottom"
			class="block w-full mb-0 font-medium"
			x-text="i18next.t('margin_bottom_on_scroll_mode') + $store.scroll.marginBottomOnScrollMode+'px'"
		></label>
		<input
			id="marginBottom"
			type="range"
			min="0"
			max="100"
			x-model="$store.scroll.marginBottomOnScrollMode"
			step="1"
			class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer dark:bg-gray-700"
		/>
	</div>
	<!-- 【自动切边】 -->
	<label
		class="inline-flex items-center w-full my-2.5 cursor-pointer outline-offset-4 outline-double outline-2 hover:outline-3 rounded-sm"
	>
		<input
			type="checkbox"
			:value="$store.global.autoCrop"
			x-on:click="$store.global.autoCrop =!$store.global.autoCrop;"
			class="sr-only peer"
		/>
		<div
			class="relative w-11 min-w-[44px] h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600"
		></div>
		<span class="font-medium ms-3" x-text="i18next.t('auto_crop')"></span>
	</label>
	<!-- 【切边阈值】 -->
	<div x-show="$store.global.autoCrop" x-transition class="relative w-full my-2 rounded-sm outline-offset-4 outline-double outline-2 hover:outline-3">
		<label
			for="autoCropNum"
			class="block w-full mb-0 font-medium"
			x-text="i18next.t('auto_crop_num') + $store.global.autoCropNum"
		></label>
		<input
			id="autoCropNum"
			type="range"
			min="1"
			max="40"
			x-model="$store.global.autoCropNum"
			step="1"
			class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer dark:bg-gray-700"
		/>
	</div>
	<!-- 竖屏宽度(百分比) -->
	<div x-show="$store.global.isPortrait" class="relative w-full my-2 rounded-sm outline-offset-4 outline-double outline-2 hover:outline-3 ">
		<label
			for="portraitWidthPercent"
			class="block w-full mb-0 font-medium"
			x-text="i18next.t('portrait_width_percent') + $store.scroll.portraitWidthPercent+'%'"
		></label>
		<input
			id="portraitWidthPercent"
			type="range"
			min="10"
			max="100"
			x-model="$store.scroll.portraitWidthPercent"
			step="1"
			class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer dark:bg-gray-700"
		/>
	</div>
	<!-- 横屏：宽度用【固定值】还是【百分比】 -->
	<label x-show="$store.global.isLandscape" class="inline-flex items-center w-full my-2.5 cursor-pointer outline-offset-4 outline-double outline-2 hover:outline-3 rounded-sm">
		<input type="checkbox" x-model="$store.scroll.widthUseFixedValue" class="sr-only peer" checked/>
		<div
			class="relative w-11 min-w-[44px] h-6 bg-gray-200 rounded-full peer peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 dark:bg-gray-700 peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-0.5 after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600"
		></div>
		<span
			class="font-medium ms-3"
			x-text="$store.scroll.widthUseFixedValue?i18next.t('width_use_fixed_value'):i18next.t('width_use_percent')"
		></span>
	</label>
	<!-- 横屏：【宽度用百分比】时的【单页漫画宽度】 -->
	<div x-show="$store.global.isLandscape && !$store.scroll.widthUseFixedValue" class="relative w-full my-2 rounded-sm outline-offset-4 outline-double outline-2 hover:outline-3 ">
		<label
			for="singlePageWidth_Percent"
			class="block w-full mb-0 font-medium"
			x-text="i18next.t('single_page_width') + $store.scroll.singlePageWidth_Percent+'%'"
		></label>
		<input
			id="singlePageWidth_Percent"
			type="range"
			min="10"
			max="100"
			x-model="$store.scroll.singlePageWidth_Percent"
			step="1"
			class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer dark:bg-gray-700"
		/>
	</div>
	<!-- 横屏：【宽度用百分比】时的【双页漫画宽度】 -->
	<div x-show="$store.global.isLandscape && !$store.scroll.widthUseFixedValue" class="relative w-full my-2 rounded-sm outline-offset-4 outline-double outline-2 hover:outline-3">
		<label
			for="doublePageWidth_Percent"
			class="block w-full mb-0 font-medium"
			x-text="i18next.t('double_page_width') + $store.scroll.doublePageWidth_Percent+'%'"
		></label>
		<input
			id="doublePageWidth_Percent"
			type="range"
			min="10"
			max="100"
			x-model="$store.scroll.doublePageWidth_Percent"
			step="1"
			class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer dark:bg-gray-700"
		/>
	</div>
	<!-- 横屏：【宽度用固定值】时的【单页漫画宽度】 -->
	<div x-show="$store.global.isLandscape && $store.scroll.widthUseFixedValue" class="relative w-full my-2 rounded-sm outline-offset-4 outline-double outline-2 hover:outline-3">
		<label
			for="singlePageWidth_PX"
			class="block w-full mb-0 font-medium"
			x-text="i18next.t('single_page_width') + $store.scroll.singlePageWidth_PX+' px'"
		></label>
		<input
			id="singlePageWidth_PX"
			type="range"
			min="100"
			max="1600"
			x-model="$store.scroll.singlePageWidth_PX"
			step="20"
			class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer dark:bg-gray-700"
		/>
	</div>
	<!-- 横屏：【宽度用固定值】时的【双页漫画宽度】 -->
	<div x-show="$store.global.isLandscape && $store.scroll.widthUseFixedValue" class="relative w-full my-2 rounded-sm outline-offset-4 outline-double outline-2 hover:outline-3">
		<label
			for="doublePageWidth_PX"
			class="block w-full mb-0 font-medium"
			x-text="i18next.t('double_page_width') + $store.scroll.doublePageWidth_PX+' px'"
		></label>
		<input
			id="doublePageWidth_PX"
			type="range"
			min="100"
			max="1600"
			x-model="$store.scroll.doublePageWidth_PX"
			step="20"
			class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer dark:bg-gray-700"
		/>
	</div>
	<!-- 【压缩图片】 -->
	<label
		class="inline-flex items-center w-full my-2.5 cursor-pointer outline-offset-4 outline-double outline-2 hover:outline-3 rounded-sm"
	>
		<input
			type="checkbox"
			:value="$store.global.autoResize"
			x-on:click="$store.global.autoResize =!$store.global.autoResize;"
			class="sr-only peer"
		/>
		<div
			class="relative w-11 min-w-[44px] h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600"
		></div>
		<span class="font-medium ms-3" x-text="i18next.t('compress_image')"></span>
	</label>
	<!-- 【压缩图片:宽度】 -->
	<div x-show="$store.global.autoResize" x-transition class="relative w-full my-2 rounded-sm outline-offset-4 outline-double outline-2 hover:outline-3 ">
		<label
			for="autoResizeWidth"
			class="block w-full mb-0 font-medium"
			x-text="i18next.t('limit_width') + $store.global.autoResizeWidth +' px'"
		></label>
		<input
			id="autoResizeWidth"
			type="range"
			min="200"
			max="2000"
			x-model="$store.global.autoResizeWidth"
			step="100"
			class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer dark:bg-gray-700"
		/>
	</div>
}
