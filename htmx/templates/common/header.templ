package common

import (
	"github.com/yumenaka/comigo/htmx/templates/common/svg"
	"github.com/yumenaka/comigo/model"
)

type HeaderProps struct {
	Title             string
	ShowReturnIcon    bool
	ReturnUrl         string
	SetDownLoadLink   bool
	InShelf           bool
	DownLoadLink      string
	SetTheme          bool
	FlipMode          bool
	ShowQuickJumpBar  bool
	QuickJumpBarBooks *model.BookInfoList
}
// bg-base-100/50 透明背景 backdrop-blur-3xl 模糊背景
templ Header(prop HeaderProps) {
	<header
		id="header"
		if prop.FlipMode {
			x-data="{ FlipMode: true }"
			onmouseover="showToolbar();"
			onmouseout="hideToolbar()"
		}
		if !prop.FlipMode {
			x-data="{ FlipMode: false }"
		}
		class={ "toolbar flex flex-row justify-between w-full h-12 p-1 border-b  bg-base-100 text-base-content border-slate-400",templ.KV("mx-auto bg-base-100/50 backdrop-blur-3xl", prop.FlipMode) }
		if prop.FlipMode {
			:class="{ 'fixed absolute top-0 ': $store.flip.autoHideToolbar}"
		}
	>
		<div class="flex flex-row">
			if prop.ShowReturnIcon {
				<!-- 返回箭头,点击返回上一页 -->
				<a href={ templ.SafeURL(prop.ReturnUrl) }>
					<div class="flex justify-center items-center w-8 h-10 mx-1 my-0 rounded hover:ring">
						@svg.Return()
					</div>
				</a>
			}
			<!-- 新服务器设置 -->
			<a href="/settings" class="flex justify-center items-center w-8 h-10 mx-1 my-0 rounded hover:ring">
				@svg.ServerDisk()
			</a>
            if prop.InShelf {
				<!-- 上传按钮，点击进入上传页面 -->
				<a href="/upload" class="w-8 pt-1 mx-1 my-0 rounded hover:ring ">
					@svg.Upload()
				</a>
			}
			<!-- 文件重排序 Dropdown Menu： https://flowbite.com/docs/components/dropdowns/ -->
			<svg class="flex justify-center items-center w-8 h-10 mx-1 my-0 rounded hover:ring" id="dropdownHoverButton" data-dropdown-toggle="ReSortDropdown" data-dropdown-trigger="hover" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24">
				<path d="M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z" fill="currentColor"></path>
			</svg>
			<div
				id="ReSortDropdown"
				x-data="{
                    addQuery(key, value) {
                    const url = new URL(window.location.href);
                    // 设置或更新查询参数
                    url.searchParams.set(key, value);
                    // 返回完整的 URL，包含新的查询参数
                    return url.toString();
                    }
                }"
				class="z-10 hidden divide-y divide-gray-100 rounded-lg shadow max-w-fit bg-white/90 dark:bg-gray-700"
			>
				<ul class="py-2 text-sm text-gray-700 dark:text-gray-200" aria-labelledby="dropdownHoverButton">
					<li>
						<a :href="addQuery('sortBy','filename')" x-text="i18next.t('sort_by_filename')" class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white"></a>
					</li>
					<li>
						<a :href="addQuery('sortBy','modify_time')" x-text="i18next.t('sort_by_modify_time')" class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white"></a>
					</li>
					<li>
						<a :href="addQuery('sortBy','filesize')" x-text="i18next.t('sort_by_filesize')" class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white"></a>
					</li>
					<li>
						<a :href="addQuery('sortBy','filename_reverse')" x-text="i18next.t('sort_by_filename_reverse')" class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Sign out</a>
					</li>
					<li>
						<a :href="addQuery('sortBy','modify_time_reverse')" x-text="i18next.t('sort_by_modify_time_reverse')" class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Sign out</a>
					</li>
					<li>
						<a :href="addQuery('sortBy','filesize_reverse')" x-text="i18next.t('sort_by_filesize_reverse')" class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Sign out</a>
					</li>
				</ul>
			</div>
		</div>
		<!-- 标题-->
		<div class="flex flex-col items-center justify-center flex-1 p-0 m-0 font-semibold text-center truncate">
			<!-- 标题，快速跳转 or 可下载压缩包 or 只显示 -->
			if (prop.InShelf) {
				<span class="text-lg font-semibold">{ prop.Title }</span>
			} else {
				if (prop.ShowQuickJumpBar&&prop.QuickJumpBarBooks!=nil) {
					<button
						id="quickJumpBarDropdownButton"
						data-dropdown-toggle="QuickJumpDropdown"
						data-dropdown-trigger="hover"
						class="max-w-fit px-5 py-2.5 inline-flex  hover:bg-gray-400 rounded-lg font-semibold text-center items-center"
						type="button"
					>
						{ prop.Title }
						@svg.ArrowDown()
					</button>
					<!-- Dropdown menu -->
					<div id="QuickJumpDropdown" class="max-w-full md:max-w-2xl md:truncate z-10 hidden divide-y divide-gray-100 rounded-lg shadow bg-white/90  dark:bg-gray-700">
						<ul class="py-2 mt-0 text-sm text-gray-700 dark:text-gray-200" aria-labelledby="quickJumpBarDropdownButton">
							for _, book := range prop.QuickJumpBarBooks.BookInfos {
								if prop.FlipMode {
									<li>
										<a href={ templ.SafeURL("/flip/" + book.BookID) } class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">{ book.Title }</a>
									</li>
								} else {
									<li>
										<a href={ templ.SafeURL("/scroll/" + book.BookID) } class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">{ book.Title }</a>
									</li>
								}
							}
						</ul>
					</div>
				} else {
					if (prop.SetDownLoadLink) {
						<span class="text-lg font-semibold text-blue-700/90 hover:underline">
							<a href={ templ.URL(prop.DownLoadLink) }>{ prop.Title }</a>
						</span>
					} else {
						<span class="text-lg font-semibold">{ prop.Title }</span>
					}
				}
			}
		</div>
		<!-- 溢出 overflow-x-auto :https://www.tailwindcss.cn/docs/overflow -->
		<div class="flex justify-between p-0 m-0 max-w-64">
			<!-- 图标：点击显示二维码 -->
			<div data-modal-target="qrcode-modal" data-modal-toggle="qrcode-modal" class="flex justify-center items-center w-8 h-10 mx-1 my-0 rounded hover:ring">
				@svg.QRCode()
			</div>
			<!-- 全屏按钮 -->
			<div id="FullScreenIcon" class="flex justify-center items-center w-8 h-10 mx-1 my-0 rounded hover:ring">
				@svg.FullScreen()
			</div>
			<!-- 阅读器设定,点击屏幕中央也可以打开  可自定义方向 -->
			<!-- data-drawer-body-scrolling="true"  允许鼠标穿透，滚动下面的页面，设置此项有个好处，就是打开抽屉时背景不抖动 -->
			<!-- https://flowbite.com/docs/components/drawer/#body-scrolling -->
			<div class="flex justify-center items-center w-8 h-10 mx-1 my-0 rounded hover:ring" id="OpenSettingButton" data-drawer-target="drawer-right" data-drawer-show="drawer-right" aria-controls="drawer-right" data-drawer-placement="right" data-drawer-body-scrolling="true">
				@svg.Setting()
			</div>
		</div>
	</header>
}
