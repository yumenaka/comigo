// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.833
package settings_page

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"github.com/gin-gonic/gin"
	"github.com/yumenaka/comigo/htmx/state"
	"github.com/yumenaka/comigo/htmx/templates/common"
)

// SettingsPage 设置页面
func SettingsPage(c *gin.Context, s *state.GlobalState) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = MainArea(&state.Global).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = common.Footer(s.Version).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = common.QRCode(s.ServerStatus.ServerHost).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = common.Toast().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<script>\n    // htmx出错时报错（Toast）\n\tdocument.addEventListener('htmx:responseError', (event) => {\n      showToast(event.detail.xhr.statusText+\": \"+event.detail.xhr.responseURL, 'error');\n    });\n    // 删除字符串数组配置中的元素。此处仅用作打印调试信息。删除操作是由 htmx 完成的。\n\tfunction deleteStringConfigValue(e) {\n\t    const configName = e.getAttribute('data-config-name');\n        const arrawIndex = e.getAttribute('data-arraw-index');\n        const deleteValue = e.getAttribute('data-delete-value');\n        console.log(configName, arrawIndex, deleteValue);\n\t}\n\t// 添加字符串数组配置中的元素\n\t// 此函数的作用，是修改 hx-vals 的值。实际的提交操作是由 htmx 完成的\n\tfunction addStringConfigValue(e) {\n        const buttonID = e.getAttribute('id');\n        const configName = buttonID.replace('AddButton', '');\n        const addValue = document.getElementById(configName+'AddInput').value;\n        console.log(configName, addValue);\n        e.setAttribute('hx-vals', JSON.stringify({configName: configName, addValue: addValue}));\n    }\n</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
