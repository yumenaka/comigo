package settings_page

import "github.com/yumenaka/comigo/htmx/state"
import "github.com/yumenaka/comigo/htmx/templates/common/svg"

templ MainArea(s *state.GlobalState) {
	<header id="header" hx-target="#tab-contents" role="tablist" hx-on:htmx-after-on-load="let currentTab = document.querySelector('[aria-selected=true]');
                                           currentTab.setAttribute('aria-selected', 'false')
                                           currentTab.classList.remove('selected')
                                           let newTab = event.target
                                           newTab.setAttribute('aria-selected', 'true')
                                           newTab.classList.add('selected')"
        class="flex justify-between w-full h-12 py-1 border-b bg-base-100 text-base-content border-slate-400">
        <a href="/" class="flex items-center justify-center w-10 text-3xl rounded hover:ring">
            @svg.Return()
        </a>
        <!-- examples: https://htmx.org/examples/tabs-javascript/-->
        <div id="tabs"
            class="flex flex-1  justify-center w-80 p-0 m-0 items-center font-semibold text-sm shadow-sm text-center focus:relative truncate">
            <button role="tab" aria-controls="tab-contents" aria-selected="true" hx-get="/htmx/settings/tab1"
                class="selected flex items-center justify-center min-w-20 mx-0.5 my-2 h-10 rounded">
                @svg.Book()
                &nbsp;Book
            </button>
            <button role="tab" aria-controls="tab-contents" aria-selected="false" hx-get="/htmx/settings/tab2"
                class="flex items-center justify-center min-w-20 mx-0.5 my-2 h-10 rounded">
                @svg.Network()
                &nbsp;Net
             </button>
            <button role="tab" aria-controls="tab-contents" aria-selected="false" hx-get="/htmx/settings/tab3"
                class="flex items-center justify-center min-w-20 mx-0.5  my-2 h-10 rounded">
                @svg.Labs()
                &nbsp;Lab
                </button>
        </div>
        <style>
            button {
                background-color: #d1d5db;
                --tw-text-opacity: 1;
                color: #6b7280; /* text-gray-500 */;
            }
            button:hover {
                 --tw-text-opacity: 1;
                 color: #374151 /* text-gray-700 */;
            }
            button.selected {
                background-color: #f9f9f9;
                --tw-text-opacity: 1;
                color: #3b82f6; /* text-blue-500 */;
            }
        </style>
        <!-- qrcode icon-->
        <div class="flex justify-between p-0 m-0 max-w-64">
            <div data-modal-target="qrcode-modal" data-modal-toggle="qrcode-modal"
                class="w-10 p-0 mx-1 my-0 rounded hover:ring ">
                @svg.QRCode()
            </div>
        </div>
    </header>
    <div class="flex flex-col justify-start items-center flex-1  w-full  h-full w-3/5 min-w-[24rem] font-semibold text-lg text-base-content"
         :class="(theme.toString() ==='light'||theme.toString() ==='dark'||theme.toString() ==='retro'||theme.toString() ==='lofi'||theme.toString() ==='nord') ? ($store.global.bgPattern !== 'none'?$store.global.bgPattern+' bg-base-300':'bg-base-300'):($store.global.bgPattern !== 'none'?$store.global.bgPattern:'')">
        <div id="tab-contents"
             role="tabpanel" hx-get="/htmx/settings/tab1" hx-trigger="load">
             Loading……
        </div>
    </div>
}
