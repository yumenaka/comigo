package settings_page

import (
	"github.com/yumenaka/comigo/htmx/state"
	"github.com/yumenaka/comigo/htmx/templ/common/svg"
)

templ MainArea(s *state.GlobalState) {
<header id="header" hx-target="#tab-contents" role="tablist" hx-on:htmx-after-on-load="let currentTab = document.querySelector('[aria-selected=true]');
                                           currentTab.setAttribute('aria-selected', 'false')
                                           currentTab.classList.remove('selected')
                                           let newTab = event.target
                                           newTab.setAttribute('aria-selected', 'true')
                                           newTab.classList.add('selected')"
    class="flex justify-between w-full h-12 py-1 border-b bg-base-100 text-base-content border-slate-400">
    <a href="/" class="flex items-center justify-center w-10 h-10 mx-1 my-0 rounded hover:ring">
        @svg.Return()
    </a>
    <!-- examples: https://htmx.org/examples/tabs-javascript/-->
    <div id="tabs"
        class="tabs flex items-center justify-center flex-1 p-0 m-0 text-sm font-semibold text-center truncate w-80 drop-shadow focus:relative">
        <button role="tab" aria-controls="tab-contents" aria-selected="true" hx-get="/htmx/settings/tab1"
            class="tabs selected flex items-center justify-center min-w-20 mx-0.5 my-2 h-9 rounded">
            @svg.Book()
            <span x-text="i18next.t('book_shelf')">Book</span>
        </button>
        <button role="tab" aria-controls="tab-contents" aria-selected="false" hx-get="/htmx/settings/tab2"
            class="tabs flex items-center justify-center min-w-20 mx-0.5 my-2 h-9 rounded">
            @svg.Network()
            <span x-text="i18next.t('network')">Network</span>
        </button>
        <button role="tab" aria-controls="tab-contents" aria-selected="false" hx-get="/htmx/settings/tab3"
            class="tabs flex items-center justify-center min-w-20 mx-0.5 my-2 h-9 rounded">
            @svg.Labs()
            <span x-text="i18next.t('labs')">Lab</span>
        </button>
    </div>
    <style>
        button.tabs {
            background-color: #b1b5bb;
            --tw-text-opacity: 1;
            color: #6b7280;
            /* text-gray-500 */
        }

        button.tabs:hover {
            --tw-text-opacity: 1;
            color: #374151
                /* text-gray-700 */
            ;
        }

        button.tabs.selected {
            background-color: #f9f9f9;
            --tw-text-opacity: 1;
            color: #3b82f6;
            /* text-blue-500 */
        }
    </style>
    <!-- qrcode icon-->
    <div data-modal-target="qrcode-modal" data-modal-toggle="qrcode-modal"
        class="flex items-center justify-center w-10 h-10 mx-1 my-0 rounded hover:ring">
        @svg.QRCode()
    </div>
</header>
<div
    id="tab-contents" role="tabpanel" hx-get="/htmx/settings/tab1" hx-trigger="load"
    class="flex flex-col justify-start items-center flex-1 w-full h-full font-semibold text-lg text-base-content"
    :class="(theme.toString() ==='light'||theme.toString() ==='dark'||theme.toString() ==='retro'||theme.toString() ==='lofi'||theme.toString() ==='nord') ? ($store.global.bgPattern !== 'none'?$store.global.bgPattern+' bg-base-300':'bg-base-300'):($store.global.bgPattern !== 'none'?$store.global.bgPattern:'')">
    Loading...
</div>
}
