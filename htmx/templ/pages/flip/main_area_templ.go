// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.857
package flip

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"github.com/yumenaka/comigo/htmx/embed"
	"github.com/yumenaka/comigo/htmx/state"
	"github.com/yumenaka/comigo/model"
)

func InsertData(bookData any, stateData any) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templ.JSONScript("NowBook", bookData).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.JSONScript("GlobalState", stateData).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func MainArea(s *state.GlobalState, book *model.Book) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div id=\"mouseMoveArea\" class=\"flex flex-col items-center justify-center flex-1 w-full max-w-full h-full min-h-full bg-base-100\" :class=\"(theme.toString() ===&#39;light&#39;||theme.toString() ===&#39;dark&#39;||theme.toString() ===&#39;retro&#39;||theme.toString() ===&#39;lofi&#39;||theme.toString() ===&#39;nord&#39;) ? ($store.global.bgPattern !== &#39;none&#39;?$store.global.bgPattern+&#39; bg-base-300&#39;:&#39;bg-base-300&#39;):($store.global.bgPattern !== &#39;none&#39;?$store.global.bgPattern:&#39;&#39;)\"><!-- 单页模式 --><div x-show=\"!$store.flip.doublePageMode\" class=\"manga_area scroll-hidden flex flex-row w-full h-full min-h-[100vh] m-0 p-0 justify-center item-center\"><div id=\"slider-container\" class=\"relative w-full h-full flex justify-center items-center overflow-hidden\"><div id=\"slider\" class=\"flex transition-transform duration-300 ease-out w-full h-full justify-center items-center\"><div id=\"prev-slide\" draggable=\"false\" class=\"slide w-full h-full flex justify-center items-center absolute\"><!-- 前一张图片 将在JS中动态加载 --></div><div id=\"current-slide\" class=\"slide w-full h-full flex justify-center items-center absolute\"><img id=\"SinglePageModeNowImage\" draggable=\"false\" class=\"object-contain m-0 rounded max-w-full max-h-full h-full\"></div><div id=\"next-slide\" draggable=\"false\" class=\"slide w-full h-full flex justify-center items-center absolute\"><!-- 后一张图片 将在JS中动态加载 --></div></div></div></div><!-- 双页模式+日漫模式--><div x-show=\"$store.flip.doublePageMode &amp;&amp; !$store.flip.rightToLeft\" class=\"manga_area flex flex-row w-full h-full min-h-[100vh] m-0 p-0 justify-center-safe item-center\"><!-- 双页模式第二页 --><img id=\"DoublePageModeNextImageLTR\" x-show=\"$store.flip.nowPageNum &lt; $store.flip.allPageNum\" class=\"select-none object-contain m-0 rounded max-w-1/2 w-auto max-h-screen grow-0\"><!-- 双页模式第一页 --><img id=\"DoublePageModeNowImageLTR\" class=\"select-none object-contain m-0 rounded max-w-1/2 w-auto max-h-screen grow-0\"></div><!-- 双页模式+美漫模式--><div x-show=\"$store.flip.doublePageMode &amp;&amp; $store.flip.rightToLeft\" class=\"manga_area flex flex-row w-full h-full min-h-[100vh] m-0 p-0 justify-center-safe item-center\"><!-- 双页模式第一页 --><img id=\"DoublePageModeNowImageRTL\" class=\"select-none object-contain m-0 rounded max-w-1/2 w-auto max-h-screen grow-0 \"><!-- 双页模式第二页 --><img id=\"DoublePageModeNextImageRTL\" x-show=\"$store.flip.nowPageNum &lt; $store.flip.allPageNum\" class=\"select-none object-contain m-0 rounded max-w-1/2 w-auto max-h-screen grow-0\"></div><!-- 底部的阅读进度条 --><!-- https://flowbite.com/docs/forms/range/ --><!-- 宽度：w-5/6 https://www.tailwindcss.cn/docs/width 使用 w-{fraction} 或 w-full 将元素设置为基于百分比的宽度。 --><!-- 定位：https://www.tailwindcss.cn/docs/position  --><!-- 使用 fixed 来定位一个元素相对于浏览器窗视口的位置。偏移量是相对于视口计算的，且该元素将作为绝对定位的子元素的位置参考。 --><!-- 控制 flex 和 grid 项目如何沿着容器的主轴定位:https://www.tailwindcss.cn/docs/justify-content --><!-- Tailwind 的容器不会自动居中，也没有任何内置的水平方向的内边距。要使一个容器居中，使用 mx-auto 功能类： --><div id=\"StepsRangeArea\" onmouseover=\"showToolbar();\" onmouseout=\"hideToolbar()\" class=\"StepsRangeArea bg-base-100 text-base-content font-semibold w-5/6 rounded px-4 overflow-hidden toolbar h-12 bg-base-100 backdrop-blur-3xl\" :class=\"Alpine.store(&#39;flip&#39;).autoHideToolbar? &#39;absolute fixed bottom-0&#39;:&#39;flex flex-col justify-center bg-base-100/50&#39;\"><div class=\"relative w-full\" :class=\"Alpine.store(&#39;flip&#39;).autoHideToolbar? &#39;mt-2.5&#39;:&#39;&#39;\"><!-- cursor-pointer:鼠标显示链接的符号（手） --><!-- appearance-none：删除浏览器默认样式--><input id=\"steps-range\" class=\"w-full h-2 m-0 bg-black/40 appearance-none cursor-pointer\" type=\"range\" min=\"1\" :max=\"$store.flip.allPageNum\" x-model=\"$store.flip.nowPageNum\" onchange=\"setImageSrc()\" step=\"1\"><div class=\"absolute w-full h-2 pointer-events-none\" style=\"bottom: 2px;\"><!-- alpinejs 的 x-for  从 1 循环到 allPageNum --><template x-for=\"i in $store.flip.allPageNum\" :key=\"i\"><div class=\"absolute\" :style=\"$store.flip.rightToLeft?`right: ${(i-1)/($store.flip.allPageNum-1)*100}%; transform: translateX(-50%);`:`left: ${(i-1)/($store.flip.allPageNum-1)*100}%; transform: translateX(50%);`\"><!-- 刻度:如果页数 < 50，则每 5 页刻度加粗；同时首页与末页也单独加粗显示 --><div :class=\"(i === 1 || i === $store.flip.allPageNum)\n        \t\t\t\t\t\t\t\t? &#39;h-4 w-[2px] bg-gray-900 rounded-xs&#39;\n        \t\t\t\t\t\t\t\t: (\n        \t\t\t\t\t\t\t\t\t$store.flip.allPageNum &lt; 50\n        \t\t\t\t\t\t\t\t\t\t? (\n        \t\t\t\t\t\t\t\t\t\t\ti % 5 === 0\n        \t\t\t\t\t\t\t\t\t\t\t\t? &#39;h-3 w-0.5 bg-gray-900 rounded-xs&#39;\n        \t\t\t\t\t\t\t\t\t\t\t\t: &#39;h-2 w-px bg-gray-600&#39;\n        \t\t\t\t\t\t\t\t\t\t)\n        \t\t\t\t\t\t\t\t\t\t: (\n        \t\t\t\t\t\t\t\t\t\t\ti % 10 === 0\n        \t\t\t\t\t\t\t\t\t\t\t\t? &#39;h-3 w-0.5 bg-gray-900 rounded-xs&#39;\n        \t\t\t\t\t\t\t\t\t\t\t\t: &#39;h-2 w-px bg-gray-600&#39;\n        \t\t\t\t\t\t\t\t\t\t)\n        \t\t\t\t\t\t\t\t)\"></div><!-- 页码: 根据页数来显示页码，如果小于 50 则每 5 页显示一次。50~100 页，每10页显示一次。 100以上每20页显示一次。--><div x-show=\"(\n        \t\t\t\t\t\t\t\ti === 1\n        \t\t\t\t\t\t\t\t|| i === $store.flip.allPageNum\n        \t\t\t\t\t\t\t\t|| ($store.flip.allPageNum &lt; 50 &amp;&amp; i % 5 === 0 &amp;&amp; i&lt;($store.flip.allPageNum-3))\n        \t\t\t\t\t\t\t\t|| ($store.flip.allPageNum &lt; 100 &amp;&amp; i % 10 === 0 &amp;&amp; i&lt;($store.flip.allPageNum-5))\n        \t\t\t\t\t\t\t\t|| ($store.flip.allPageNum &gt;= 100 &amp;&amp; i % 20 === 0 &amp;&amp; i&lt;($store.flip.allPageNum-10))\n        \t\t\t\t\t\t\t)\" class=\"text-xs text-center mb-0.5\" style=\"position: absolute; bottom: 110%; left: 50%; transform: translateX(-50%);\"><span x-text=\"$store.flip.rightToLeft?($store.flip.allPageNum-i):i\"></span></div></div></template></div></div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.Raw("<style>"+embed.GetFileStr("static/flip.css")+"</style>").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<style>\n\t\t/* 滑动切换相关样式 */\n\t\t#slider-container {\n\t\t\ttouch-action: pan-y; /* 允许垂直滚动，但水平滑动会被捕获 */\n\t\t\tuser-select: none; /* 防止文本选择 */\n\t\t\tmin-height: 100vh; /* 至少占据视口高度的100% */\n\t\t}\n\t\t\n\t\t#slider {\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tmin-height: 100vh; /* 至少占据视口高度的100% */\n\t\t\twill-change: transform; /* 优化动画性能 */\n\t\t}\n\t\t\n\t\t.slide {\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tmin-height: 100vh; /* 至少占据视口高度的100% */\n\t\t\tflex-shrink: 0;\n\t\t\ttransform: translateX(0);\n\t\t}\n\t\t\n\t\t/* 基本位置设置，会通过JavaScript动态调整 */\n\t\t#prev-slide {\n\t\t\ttransform: translateX(-100%);\n\t\t}\n\t\t\n\t\t#current-slide {\n\t\t\ttransform: translateX(0);\n\t\t}\n\t\t\n\t\t#next-slide {\n\t\t\ttransform: translateX(100%);\n\t\t}\n\t\t\n\t\t/* 滑动翻页模式下的样式 */\n\t\t.swipe-enabled #slider-container {\n\t\t\tcursor: grab;\n\t\t}\n\t\t\n\t\t.swipe-enabled #slider-container:active {\n\t\t\tcursor: grabbing;\n\t\t}\n\t\t\n\t\t/* 确保manga_area有足够的高度 */\n\t\t.manga_area {\n\t\t\tmin-height: 100vh !important; /* 强制设置最小高度 */\n\t\t}\n\t</style>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
